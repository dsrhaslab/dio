---

- include_vars: group_vars/kube_cluster.yml

- name: Delete Strace results directory (if it exists)
  become: yes
  file:
    path: "{{ tracing_data_dir }}/strace/strace_data"
    state: absent

- name: Create Strace results directory
  file:
    path: "{{ tracing_data_dir }}/strace/strace_data"
    state: directory

- name: Copy events stats script
  copy:
    src: files/get_strace_events_stats.sh
    dest: "{{ filebench_dir }}/get_strace_events_stats.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode:  0644

- name: Get hostname
  shell: uname -n
  register: target_hostname

- name: Start Dstat
  shell: screen -S "FILEBENCH_DSTAT_{{run_number}}" -d -m python3 /usr/share/dstat/dstat --time --cpu --mem --net --disk --swap --output "{{tracing_data_dir}}/strace/dstat.csv"

- name: Pause for 10 seconds
  pause:
    seconds: 10

- name: Running filebench (with strace) [run={{run_number}}]
  docker_container:
    name: strace_filebench
    image: taniaesteves/filebench_dio:v1.0.0
    state: started
    recreate: yes
    detach: false
    pid_mode: host
    network_mode: host
    hostname: "{{target_hostname.stdout}}"
    privileged: true
    capabilities:
      - SYS_PTRACE
    volumes:
      - /lib/modules:/lib/modules:ro
      - /usr/src:/usr/src:ro
      - /sys/kernel/debug/:/sys/kernel/debug/:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - "{{ tracing_data_dir }}/strace/strace_data:/strace_data"
      - "{{ filebench_data_dir }}:/tmp/filebench"
      - "{{ filebench_dir }}/fileserver.f:/filebench/workloads/fileserver.f"
    env:
      STRACE_OPTIONS: "{{strace_options}}"
    command: "{{ 'strace filter_tid' if (filter_tid|bool == true) else 'strace' }}"
  register: strace_container

- name: Pause for 10 seconds
  pause:
    seconds: 10

- name: Stop dstat
  shell: screen -X -S "FILEBENCH_DSTAT_{{run_number}}" quit
  ignore_errors: true

- name: Kill all screen sessions
  shell: pkill screen
  ignore_errors: true
  become: yes

- name: Kill all screen sessions
  shell: killall screen
  ignore_errors: true
  become: yes

- assert:
    that:
      - "not strace_container.failed"
      - "strace_container.container.State.Status == 'exited'"

- name: Save logs
  shell: docker logs -n 100 strace_filebench > "{{tracing_data_dir}}/strace/docker_logs.txt" 2>&1

- shell: ls -lah {{ tracing_data_dir }}/strace/strace_data/strace.out
  become: yes
  ignore_errors: true
  register: trace_ls_size

- debug:
    msg: "{{trace_ls_size.stdout}}"
  ignore_errors: true

- shell: echo "{{trace_ls_size.stdout}}" > "{{tracing_data_dir}}/strace/trace-size.txt"
  ignore_errors: true

- name: Get trace stats
  shell: bash {{ filebench_dir }}/get_strace_events_stats.sh -i {{ tracing_data_dir }}/strace/strace_data/strace.out -o {{ tracing_data_dir }}/strace/tracer-stats.txt

- shell: rm {{ tracing_data_dir }}/strace/strace_data/strace.out
  become: yes
  ignore_errors: true

- shell: (cd "{{tracing_data_dir}}/strace"; find "$PWD"/* -maxdepth 2 -type f)
  register: files_to_copy

- name: Save results
  fetch:
    src: "{{ file_item }}"
    dest: "final_test_results/filebench/{{prefix}}{{setup_res_dir}}{{suffix}}/run_{{run_number}}/"
    flat: yes
  with_items: "{{ files_to_copy.stdout_lines }}"
  loop_control:
    loop_var: file_item
